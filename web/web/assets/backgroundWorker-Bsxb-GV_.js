(function(){"use strict";const d={};let k={x:-100,y:-100},l="block",H="",p=null,S=!0,W=!1,c="none";self.onmessage=function(o){let h;switch(o.data.type){case"updateMousePosition":{k=o.data.data;break}case"shapeSwitch":{const{currentActiveShape:i,timestamp:a}=o.data.data;i!==l&&(W||(Object.keys(d).forEach(r=>{const e=d[r];e.shapeType===l&&(e.currentWidth=e.targetWidth,e.currentHeight=e.targetHeight)}),W=!0),Object.keys(d).forEach(r=>{const e=d[r];e.rotation=0,e.targetRotation=0,e.currentY=e.originalY,e.targetY=e.originalY,e.hasMoved=!1,e.isAnimating=!1,e.animationPhase="none",e.shapeType===H&&(e.targetWidth=0,e.targetHeight=0)}),H=l,l=i,p=a,c="shrink");break}case"calculateShapes":{let{canvas:i,imgConfig:a,timestamp:r}=o.data.data;p||(p=r),h=j(i,l,H,a),self.postMessage({type:"shapeResults",data:h});break}}};const f=o=>o*(2-o),P=(o,h,i,a)=>{const r=k.x,e=k.y;return r>=o&&r<=o+i&&e>=h&&e<=h+a};function C(o,h,i,a,r,e,w){if(!d[o]){const g=e===l;d[o]={currentY:i,targetY:i,currentWidth:g&&!S?a:0,currentHeight:g&&!S?r:0,targetWidth:g?a:0,targetHeight:g?r:0,centerX:h+a/2,centerY:i+r/2,width:a,height:r,shapeType:e,isAnimating:!1,animationStartTime:0,originalY:i,animationPhase:"none",hasTriggered:!1}}const t=d[o];if(e===l?(W||(t.currentWidth=a,t.currentHeight=r),t.targetWidth=a,t.targetHeight=r):e===H&&w&&(t.targetWidth=0,t.targetHeight=0),P(h,i,a,r)&&!t.isAnimating&&!t.hasTriggered&&(t.isAnimating=!0,t.animationStartTime=Date.now(),t.animationPhase="up",t.hasTriggered=!0),P(h,i,a,r)||(t.hasTriggered=!1),t.isAnimating){const D=Date.now()-t.animationStartTime;t.animationPhase==="up"?D<180?t.targetY=t.originalY-150:(t.animationStartTime=Date.now(),t.animationPhase="down"):t.animationPhase==="down"&&(D<150?t.targetY=t.originalY-150+150:(t.isAnimating=!1,t.animationPhase="none",t.targetY=t.originalY))}const Y=f(.08),n=f(.1),u=f(.1);t.currentY=t.currentY||i,t.currentWidth=t.currentWidth||0,t.currentHeight=t.currentHeight||0,t.currentY+=(t.targetY-t.currentY)*Y,t.currentWidth+=(t.targetWidth-t.currentWidth)*n,t.currentHeight+=(t.targetHeight-t.currentHeight)*u;const s=t.centerX-t.currentWidth/2,m=t.currentY-(t.currentHeight-r)/2;return{x:s,y:m,width:t.currentWidth,height:t.currentHeight}}function I(o,h,i,a,r,e,w){if(!d[o]){const g=e===l;d[o]={currentY:i,targetY:i,currentWidth:g&&!S?a:0,currentHeight:g&&!S?r:0,targetWidth:g?a:0,targetHeight:g?r:0,centerX:h+a*.73/2,centerY:i+r*.73/2,width:a,height:r,rotation:0,targetRotation:0,shapeType:e,hasMoved:!1,originalY:i}}const t=d[o];e===l?(W||(t.currentWidth=a,t.currentHeight=r),t.targetWidth=a,t.targetHeight=r):e===H&&w&&(t.targetWidth=0,t.targetHeight=0),P(h,i,a,r)?t.hasMoved||(t.targetRotation+=-Math.PI/1.5,t.hasMoved=!0):t.hasMoved=!1;const Y=f(.1),n=f(.1),u=f(.1);t.currentY=t.currentY||i,t.currentWidth=t.currentWidth||0,t.currentHeight=t.currentHeight||0,t.currentWidth+=(t.targetWidth-t.currentWidth)*n,t.currentHeight+=(t.targetHeight-t.currentHeight)*u,t.rotation+=(t.targetRotation-t.rotation)*Y;const s=t.centerX-t.currentWidth*.73/2,m=t.currentY-t.currentHeight*.73/2;return{x:s,y:m,width:t.currentWidth,height:t.currentHeight,rotation:t.rotation,rotationOriginX:t.centerX-s,rotationOriginY:t.centerY-m}}function j(o,h,i,a){const r=[],e=Date.now(),w=200,t=200,Y=200;if(c==="shrink"?e-p>=w&&(c="wait",p=e):c==="wait"?e-p>=t&&(c="grow",p=e):c==="grow"&&e-p>=Y&&(c="none"),a.forEach(n=>{const u=n.height*.5,s=n.width*.5,m=s/2,g=u*(n.shape==="tetrapod"?.73:.75),E=s*(n.shape==="tetrapod"?.73:1),T=-n.width*(n.shape==="tetrapod"?.5:.25),D=-n.height*.5,z=Math.floor(o.height+u),$=Math.floor(o.width+s);for(let M=0;M<z;M+=g){const F=Math.floor(M/g)%2===0?0:m*(n.shape==="tetrapod"?.73:1);for(let R=0;R<$;R+=E){const X=M+D,b=R+F+T,B=`${Math.round(b)}_${Math.round(X)}`;let v=!1;if(c==="shrink"?v=n.shape===i:(c==="grow"||c==="none")&&(v=n.shape===h),v){const A=n.shape==="block"?C(B,b,X,s,u,n.shape,c!=="none"):I(B,b,X,s,u,n.shape,c!=="none");(A.width>0||A.height>0)&&r.push({type:n.shape,...A})}}}}),c!=="none"){const n=e-p;let u=1;c==="shrink"?(u=Math.max(0,1-n/w),r.forEach(s=>{s.width*=u,s.height*=u})):c==="grow"&&(u=Math.min(1,n/Y),r.forEach(s=>{s.width*=u,s.height*=u}))}return r}})();
